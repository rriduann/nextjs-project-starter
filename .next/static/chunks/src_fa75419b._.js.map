{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/lib/utils.ts"],"sourcesContent":["import { clsx, type ClassValue } from \"clsx\"\nimport { twMerge } from \"tailwind-merge\"\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs))\n}\n"],"names":[],"mappings":";;;AAAA;AACA;;;AAEO,SAAS,GAAG,GAAG,MAAoB;IACxC,OAAO,CAAA,GAAA,8JAAA,CAAA,UAAO,AAAD,EAAE,CAAA,GAAA,wIAAA,CAAA,OAAI,AAAD,EAAE;AACtB","debugId":null}},
    {"offset": {"line": 26, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium transition-all disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg:not([class*='size-'])]:size-4 shrink-0 [&_svg]:shrink-0 outline-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"bg-primary text-primary-foreground shadow-xs hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-white shadow-xs hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"border bg-background shadow-xs hover:bg-accent hover:text-accent-foreground dark:bg-input/30 dark:border-input dark:hover:bg-input/50\",\n        secondary:\n          \"bg-secondary text-secondary-foreground shadow-xs hover:bg-secondary/80\",\n        ghost:\n          \"hover:bg-accent hover:text-accent-foreground dark:hover:bg-accent/50\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-9 px-4 py-2 has-[>svg]:px-3\",\n        sm: \"h-8 rounded-md gap-1.5 px-3 has-[>svg]:px-2.5\",\n        lg: \"h-10 rounded-md px-6 has-[>svg]:px-4\",\n        icon: \"size-9\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nfunction Button({\n  className,\n  variant,\n  size,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"button\"> &\n  VariantProps<typeof buttonVariants> & {\n    asChild?: boolean\n  }) {\n  const Comp = asChild ? Slot : \"button\"\n\n  return (\n    <Comp\n      data-slot=\"button\"\n      className={cn(buttonVariants({ variant, size, className }))}\n      {...props}\n    />\n  )\n}\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACvB,+bACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,aACE;YACF,SACE;YACF,WACE;YACF,OACE;YACF,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AAGF,SAAS,OAAO,EACd,SAAS,EACT,OAAO,EACP,IAAI,EACJ,UAAU,KAAK,EACf,GAAG,OAIF;IACD,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACvD,GAAG,KAAK;;;;;;AAGf;KAnBS","debugId":null}},
    {"offset": {"line": 89, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/badge.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst badgeVariants = cva(\n  \"inline-flex items-center justify-center rounded-md border px-2 py-0.5 text-xs font-medium w-fit whitespace-nowrap shrink-0 [&>svg]:size-3 gap-1 [&>svg]:pointer-events-none focus-visible:border-ring focus-visible:ring-ring/50 focus-visible:ring-[3px] aria-invalid:ring-destructive/20 dark:aria-invalid:ring-destructive/40 aria-invalid:border-destructive transition-[color,box-shadow] overflow-hidden\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground [a&]:hover:bg-primary/90\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground [a&]:hover:bg-secondary/90\",\n        destructive:\n          \"border-transparent bg-destructive text-white [a&]:hover:bg-destructive/90 focus-visible:ring-destructive/20 dark:focus-visible:ring-destructive/40 dark:bg-destructive/60\",\n        outline:\n          \"text-foreground [a&]:hover:bg-accent [a&]:hover:text-accent-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nfunction Badge({\n  className,\n  variant,\n  asChild = false,\n  ...props\n}: React.ComponentProps<\"span\"> &\n  VariantProps<typeof badgeVariants> & { asChild?: boolean }) {\n  const Comp = asChild ? Slot : \"span\"\n\n  return (\n    <Comp\n      data-slot=\"badge\"\n      className={cn(badgeVariants({ variant }), className)}\n      {...props}\n    />\n  )\n}\n\nexport { Badge, badgeVariants }\n"],"names":[],"mappings":";;;;;AACA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,kZACA;IACE,UAAU;QACR,SAAS;YACP,SACE;YACF,WACE;YACF,aACE;YACF,SACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,SAAS,MAAM,EACb,SAAS,EACT,OAAO,EACP,UAAU,KAAK,EACf,GAAG,OAEuD;IAC1D,MAAM,OAAO,UAAU,mKAAA,CAAA,OAAI,GAAG;IAE9B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf;KAhBS","debugId":null}},
    {"offset": {"line": 141, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/DashboardHeader.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useEffect } from 'react'\nimport { Button } from '@/components/ui/button'\nimport { Badge } from '@/components/ui/badge'\n\nexport function DashboardHeader() {\n  const [currentTime, setCurrentTime] = useState(new Date())\n\n  useEffect(() => {\n    const timer = setInterval(() => {\n      setCurrentTime(new Date())\n    }, 1000)\n    return () => clearInterval(timer)\n  }, [])\n\n  return (\n    <header className=\"bg-white border-b border-gray-200 px-6 py-4\">\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex items-center space-x-4\">\n          <div className=\"flex items-center space-x-2\">\n            <div className=\"w-8 h-8 bg-blue-600 rounded-lg flex items-center justify-center\">\n              <span className=\"text-white text-sm font-bold\">QR</span>\n            </div>\n            <div>\n              <h1 className=\"text-xl font-bold text-gray-900\">Attendance Security Dashboard</h1>\n              <p className=\"text-sm text-gray-500\">Real-time monitoring and management</p>\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"flex items-center space-x-4\">\n          <div className=\"flex items-center space-x-2\">\n            <Badge variant=\"outline\" className=\"bg-green-50 text-green-700 border-green-200\">\n              <div className=\"w-2 h-2 bg-green-500 rounded-full mr-2 animate-pulse\"></div>\n              System Online\n            </Badge>\n          </div>\n          \n          <div className=\"text-right\">\n            <p className=\"text-sm font-medium text-gray-900\">\n              {currentTime.toLocaleDateString()}\n            </p>\n            <p className=\"text-xs text-gray-500\">\n              {currentTime.toLocaleTimeString()}\n            </p>\n          </div>\n          \n          <Button variant=\"outline\" size=\"sm\">\n            Settings\n          </Button>\n        </div>\n      </div>\n    </header>\n  )\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;;;AAJA;;;;AAMO,SAAS;;IACd,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE,IAAI;IAEnD,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;qCAAE;YACR,MAAM,QAAQ;mDAAY;oBACxB,eAAe,IAAI;gBACrB;kDAAG;YACH;6CAAO,IAAM,cAAc;;QAC7B;oCAAG,EAAE;IAEL,qBACE,6LAAC;QAAO,WAAU;kBAChB,cAAA,6LAAC;YAAI,WAAU;;8BACb,6LAAC;oBAAI,WAAU;8BACb,cAAA,6LAAC;wBAAI,WAAU;;0CACb,6LAAC;gCAAI,WAAU;0CACb,cAAA,6LAAC;oCAAK,WAAU;8CAA+B;;;;;;;;;;;0CAEjD,6LAAC;;kDACC,6LAAC;wCAAG,WAAU;kDAAkC;;;;;;kDAChD,6LAAC;wCAAE,WAAU;kDAAwB;;;;;;;;;;;;;;;;;;;;;;;8BAK3C,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAI,WAAU;sCACb,cAAA,6LAAC,oIAAA,CAAA,QAAK;gCAAC,SAAQ;gCAAU,WAAU;;kDACjC,6LAAC;wCAAI,WAAU;;;;;;oCAA6D;;;;;;;;;;;;sCAKhF,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAE,WAAU;8CACV,YAAY,kBAAkB;;;;;;8CAEjC,6LAAC;oCAAE,WAAU;8CACV,YAAY,kBAAkB;;;;;;;;;;;;sCAInC,6LAAC,qIAAA,CAAA,SAAM;4BAAC,SAAQ;4BAAU,MAAK;sCAAK;;;;;;;;;;;;;;;;;;;;;;;AAO9C;GAjDgB;KAAA","debugId":null}},
    {"offset": {"line": 322, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/DashboardSidebar.tsx"],"sourcesContent":["'use client'\n\nimport { Button } from '@/components/ui/button'\nimport { Badge } from '@/components/ui/badge'\nimport { cn } from '@/lib/utils'\n\ninterface DashboardSidebarProps {\n  activeTab: string\n  onTabChange: (tab: string) => void\n}\n\nexport function DashboardSidebar({ activeTab, onTabChange }: DashboardSidebarProps) {\n  const menuItems = [\n    {\n      id: 'overview',\n      label: 'Overview',\n      description: 'Dashboard summary'\n    },\n    {\n      id: 'attendance',\n      label: 'Attendance',\n      description: 'View records'\n    },\n    {\n      id: 'security',\n      label: 'Security Alerts',\n      description: 'Monitor violations',\n      badge: 'Live'\n    },\n    {\n      id: 'devices',\n      label: 'Device Management',\n      description: 'Manage devices'\n    },\n    {\n      id: 'locations',\n      label: 'Location Tracking',\n      description: 'GPS monitoring'\n    }\n  ]\n\n  return (\n    <aside className=\"w-64 bg-white border-r border-gray-200 min-h-screen\">\n      <div className=\"p-6\">\n        <h2 className=\"text-lg font-semibold text-gray-900 mb-6\">Navigation</h2>\n        <nav className=\"space-y-2\">\n          {menuItems.map((item) => (\n            <Button\n              key={item.id}\n              variant={activeTab === item.id ? \"default\" : \"ghost\"}\n              className={cn(\n                \"w-full justify-start h-auto p-3 text-left\",\n                activeTab === item.id \n                  ? \"bg-blue-600 text-white hover:bg-blue-700\" \n                  : \"text-gray-700 hover:bg-gray-100\"\n              )}\n              onClick={() => onTabChange(item.id)}\n            >\n              <div className=\"flex items-center justify-between w-full\">\n                <div>\n                  <div className=\"font-medium\">{item.label}</div>\n                  <div className={cn(\n                    \"text-xs mt-1\",\n                    activeTab === item.id ? \"text-blue-100\" : \"text-gray-500\"\n                  )}>\n                    {item.description}\n                  </div>\n                </div>\n                {item.badge && (\n                  <Badge \n                    variant={activeTab === item.id ? \"secondary\" : \"outline\"}\n                    className=\"ml-2 text-xs\"\n                  >\n                    {item.badge}\n                  </Badge>\n                )}\n              </div>\n            </Button>\n          ))}\n        </nav>\n      </div>\n      \n      <div className=\"absolute bottom-0 left-0 right-0 p-6 border-t border-gray-200\">\n        <div className=\"bg-gray-50 rounded-lg p-4\">\n          <h3 className=\"font-medium text-gray-900 mb-2\">System Status</h3>\n          <div className=\"space-y-2 text-sm\">\n            <div className=\"flex justify-between\">\n              <span className=\"text-gray-600\">Security Level</span>\n              <Badge variant=\"outline\" className=\"bg-green-50 text-green-700 border-green-200\">\n                High\n              </Badge>\n            </div>\n            <div className=\"flex justify-between\">\n              <span className=\"text-gray-600\">Monitoring</span>\n              <span className=\"text-green-600 font-medium\">Active</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    </aside>\n  )\n}\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAJA;;;;;AAWO,SAAS,iBAAiB,EAAE,SAAS,EAAE,WAAW,EAAyB;IAChF,MAAM,YAAY;QAChB;YACE,IAAI;YACJ,OAAO;YACP,aAAa;QACf;QACA;YACE,IAAI;YACJ,OAAO;YACP,aAAa;QACf;QACA;YACE,IAAI;YACJ,OAAO;YACP,aAAa;YACb,OAAO;QACT;QACA;YACE,IAAI;YACJ,OAAO;YACP,aAAa;QACf;QACA;YACE,IAAI;YACJ,OAAO;YACP,aAAa;QACf;KACD;IAED,qBACE,6LAAC;QAAM,WAAU;;0BACf,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAG,WAAU;kCAA2C;;;;;;kCACzD,6LAAC;wBAAI,WAAU;kCACZ,UAAU,GAAG,CAAC,CAAC,qBACd,6LAAC,qIAAA,CAAA,SAAM;gCAEL,SAAS,cAAc,KAAK,EAAE,GAAG,YAAY;gCAC7C,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,6CACA,cAAc,KAAK,EAAE,GACjB,6CACA;gCAEN,SAAS,IAAM,YAAY,KAAK,EAAE;0CAElC,cAAA,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;;8DACC,6LAAC;oDAAI,WAAU;8DAAe,KAAK,KAAK;;;;;;8DACxC,6LAAC;oDAAI,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACf,gBACA,cAAc,KAAK,EAAE,GAAG,kBAAkB;8DAEzC,KAAK,WAAW;;;;;;;;;;;;wCAGpB,KAAK,KAAK,kBACT,6LAAC,oIAAA,CAAA,QAAK;4CACJ,SAAS,cAAc,KAAK,EAAE,GAAG,cAAc;4CAC/C,WAAU;sDAET,KAAK,KAAK;;;;;;;;;;;;+BAzBZ,KAAK,EAAE;;;;;;;;;;;;;;;;0BAkCpB,6LAAC;gBAAI,WAAU;0BACb,cAAA,6LAAC;oBAAI,WAAU;;sCACb,6LAAC;4BAAG,WAAU;sCAAiC;;;;;;sCAC/C,6LAAC;4BAAI,WAAU;;8CACb,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CAAK,WAAU;sDAAgB;;;;;;sDAChC,6LAAC,oIAAA,CAAA,QAAK;4CAAC,SAAQ;4CAAU,WAAU;sDAA8C;;;;;;;;;;;;8CAInF,6LAAC;oCAAI,WAAU;;sDACb,6LAAC;4CAAK,WAAU;sDAAgB;;;;;;sDAChC,6LAAC;4CAAK,WAAU;sDAA6B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAO3D;KA1FgB","debugId":null}},
    {"offset": {"line": 544, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Card({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card\"\n      className={cn(\n        \"bg-card text-card-foreground flex flex-col gap-6 rounded-xl border py-6 shadow-sm\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardHeader({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-header\"\n      className={cn(\n        \"@container/card-header grid auto-rows-min grid-rows-[auto_auto] items-start gap-1.5 px-6 has-data-[slot=card-action]:grid-cols-[1fr_auto] [.border-b]:pb-6\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-title\"\n      className={cn(\"leading-none font-semibold\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardDescription({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-description\"\n      className={cn(\"text-muted-foreground text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardAction({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-action\"\n      className={cn(\n        \"col-start-2 row-span-2 row-start-1 self-start justify-self-end\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction CardContent({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-content\"\n      className={cn(\"px-6\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction CardFooter({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"card-footer\"\n      className={cn(\"flex items-center px-6 [.border-t]:pt-6\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardAction,\n  CardDescription,\n  CardContent,\n}\n"],"names":[],"mappings":";;;;;;;;;;AAEA;;;AAEA,SAAS,KAAK,EAAE,SAAS,EAAE,GAAG,OAAoC;IAChE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qFACA;QAED,GAAG,KAAK;;;;;;AAGf;KAXS;AAaT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,8JACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAoC;IACrE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,gBAAgB,EAAE,SAAS,EAAE,GAAG,OAAoC;IAC3E,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kEACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAoC;IACvE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,QAAQ;QACrB,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,2CAA2C;QACxD,GAAG,KAAK;;;;;;AAGf;MARS","debugId":null}},
    {"offset": {"line": 659, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/table.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nfunction Table({ className, ...props }: React.ComponentProps<\"table\">) {\n  return (\n    <div\n      data-slot=\"table-container\"\n      className=\"relative w-full overflow-x-auto\"\n    >\n      <table\n        data-slot=\"table\"\n        className={cn(\"w-full caption-bottom text-sm\", className)}\n        {...props}\n      />\n    </div>\n  )\n}\n\nfunction TableHeader({ className, ...props }: React.ComponentProps<\"thead\">) {\n  return (\n    <thead\n      data-slot=\"table-header\"\n      className={cn(\"[&_tr]:border-b\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction TableBody({ className, ...props }: React.ComponentProps<\"tbody\">) {\n  return (\n    <tbody\n      data-slot=\"table-body\"\n      className={cn(\"[&_tr:last-child]:border-0\", className)}\n      {...props}\n    />\n  )\n}\n\nfunction TableFooter({ className, ...props }: React.ComponentProps<\"tfoot\">) {\n  return (\n    <tfoot\n      data-slot=\"table-footer\"\n      className={cn(\n        \"bg-muted/50 border-t font-medium [&>tr]:last:border-b-0\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TableRow({ className, ...props }: React.ComponentProps<\"tr\">) {\n  return (\n    <tr\n      data-slot=\"table-row\"\n      className={cn(\n        \"hover:bg-muted/50 data-[state=selected]:bg-muted border-b transition-colors\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TableHead({ className, ...props }: React.ComponentProps<\"th\">) {\n  return (\n    <th\n      data-slot=\"table-head\"\n      className={cn(\n        \"text-foreground h-10 px-2 text-left align-middle font-medium whitespace-nowrap [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TableCell({ className, ...props }: React.ComponentProps<\"td\">) {\n  return (\n    <td\n      data-slot=\"table-cell\"\n      className={cn(\n        \"p-2 align-middle whitespace-nowrap [&:has([role=checkbox])]:pr-0 [&>[role=checkbox]]:translate-y-[2px]\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction TableCaption({\n  className,\n  ...props\n}: React.ComponentProps<\"caption\">) {\n  return (\n    <caption\n      data-slot=\"table-caption\"\n      className={cn(\"text-muted-foreground mt-4 text-sm\", className)}\n      {...props}\n    />\n  )\n}\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAIA;AAJA;;;AAMA,SAAS,MAAM,EAAE,SAAS,EAAE,GAAG,OAAsC;IACnE,qBACE,6LAAC;QACC,aAAU;QACV,WAAU;kBAEV,cAAA,6LAAC;YACC,aAAU;YACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIjB;KAbS;AAeT,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAsC;IACzE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAChC,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAsC;IACvE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGf;MARS;AAUT,SAAS,YAAY,EAAE,SAAS,EAAE,GAAG,OAAsC;IACzE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,SAAS,EAAE,SAAS,EAAE,GAAG,OAAmC;IACnE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAmC;IACpE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sJACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,UAAU,EAAE,SAAS,EAAE,GAAG,OAAmC;IACpE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,0GACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,aAAa,EACpB,SAAS,EACT,GAAG,OAC6B;IAChC,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGf;MAXS","debugId":null}},
    {"offset": {"line": 797, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/AttendanceTable.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useEffect } from 'react'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Badge } from '@/components/ui/badge'\nimport { Button } from '@/components/ui/button'\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table'\n\ninterface AttendanceRecord {\n  id: string\n  employeeId: string\n  employeeName: string\n  qrData: string\n  timestamp: string\n  location: {\n    lat: number\n    lng: number\n    address: string\n  }\n  status: 'valid' | 'suspicious' | 'blocked'\n  securityScore: number\n  deviceInfo: string\n}\n\nexport function AttendanceTable() {\n  const [records, setRecords] = useState<AttendanceRecord[]>([])\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    // Simulate API call\n    const fetchRecords = async () => {\n      setLoading(true)\n      try {\n        // Simulate API delay\n        await new Promise(resolve => setTimeout(resolve, 1000))\n        \n        // Mock data with security information\n        const mockRecords: AttendanceRecord[] = [\n          {\n            id: '1',\n            employeeId: 'EMP001',\n            employeeName: 'John Smith',\n            qrData: 'QR-2024-001-SECURE',\n            timestamp: new Date().toISOString(),\n            location: {\n              lat: 40.7128,\n              lng: -74.0060,\n              address: 'Office Building A, Floor 3'\n            },\n            status: 'valid',\n            securityScore: 95,\n            deviceInfo: 'Samsung Galaxy S23'\n          },\n          {\n            id: '2',\n            employeeId: 'EMP002',\n            employeeName: 'Sarah Johnson',\n            qrData: 'QR-2024-002-SECURE',\n            timestamp: new Date(Date.now() - 300000).toISOString(),\n            location: {\n              lat: 40.7130,\n              lng: -74.0058,\n              address: 'Office Building A, Floor 2'\n            },\n            status: 'suspicious',\n            securityScore: 65,\n            deviceInfo: 'iPhone 14 Pro'\n          },\n          {\n            id: '3',\n            employeeId: 'EMP003',\n            employeeName: 'Mike Wilson',\n            qrData: 'QR-2024-003-SECURE',\n            timestamp: new Date(Date.now() - 600000).toISOString(),\n            location: {\n              lat: 40.7125,\n              lng: -74.0062,\n              address: 'Office Building A, Floor 1'\n            },\n            status: 'blocked',\n            securityScore: 25,\n            deviceInfo: 'OnePlus 11'\n          }\n        ]\n        \n        setRecords(mockRecords)\n      } catch (error) {\n        console.error('Failed to fetch attendance records:', error)\n      } finally {\n        setLoading(false)\n      }\n    }\n\n    fetchRecords()\n  }, [])\n\n  const getStatusBadge = (status: string, score: number) => {\n    switch (status) {\n      case 'valid':\n        return <Badge className=\"bg-green-100 text-green-800 border-green-200\">Valid</Badge>\n      case 'suspicious':\n        return <Badge className=\"bg-yellow-100 text-yellow-800 border-yellow-200\">Suspicious</Badge>\n      case 'blocked':\n        return <Badge className=\"bg-red-100 text-red-800 border-red-200\">Blocked</Badge>\n      default:\n        return <Badge variant=\"outline\">Unknown</Badge>\n    }\n  }\n\n  const getSecurityScoreColor = (score: number) => {\n    if (score >= 80) return 'text-green-600'\n    if (score >= 60) return 'text-yellow-600'\n    return 'text-red-600'\n  }\n\n  if (loading) {\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle>Attendance Records</CardTitle>\n          <CardDescription>Loading attendance data...</CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"flex items-center justify-center h-64\">\n            <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\n          </div>\n        </CardContent>\n      </Card>\n    )\n  }\n\n  return (\n    <Card>\n      <CardHeader>\n        <div className=\"flex items-center justify-between\">\n          <div>\n            <CardTitle>Attendance Records</CardTitle>\n            <CardDescription>\n              Real-time attendance tracking with security validation\n            </CardDescription>\n          </div>\n          <Button variant=\"outline\" size=\"sm\">\n            Export Data\n          </Button>\n        </div>\n      </CardHeader>\n      <CardContent>\n        {records.length === 0 ? (\n          <div className=\"text-center py-8\">\n            <p className=\"text-gray-500\">No attendance records found</p>\n          </div>\n        ) : (\n          <div className=\"overflow-x-auto\">\n            <Table>\n              <TableHeader>\n                <TableRow>\n                  <TableHead>Employee</TableHead>\n                  <TableHead>QR Code</TableHead>\n                  <TableHead>Timestamp</TableHead>\n                  <TableHead>Location</TableHead>\n                  <TableHead>Security Score</TableHead>\n                  <TableHead>Device</TableHead>\n                  <TableHead>Status</TableHead>\n                  <TableHead>Actions</TableHead>\n                </TableRow>\n              </TableHeader>\n              <TableBody>\n                {records.map((record) => (\n                  <TableRow key={record.id}>\n                    <TableCell>\n                      <div>\n                        <div className=\"font-medium\">{record.employeeName}</div>\n                        <div className=\"text-sm text-gray-500\">{record.employeeId}</div>\n                      </div>\n                    </TableCell>\n                    <TableCell>\n                      <code className=\"text-xs bg-gray-100 px-2 py-1 rounded\">\n                        {record.qrData}\n                      </code>\n                    </TableCell>\n                    <TableCell>\n                      <div className=\"text-sm\">\n                        {new Date(record.timestamp).toLocaleDateString()}\n                      </div>\n                      <div className=\"text-xs text-gray-500\">\n                        {new Date(record.timestamp).toLocaleTimeString()}\n                      </div>\n                    </TableCell>\n                    <TableCell>\n                      <div className=\"text-sm\">{record.location.address}</div>\n                      <div className=\"text-xs text-gray-500\">\n                        {record.location.lat.toFixed(4)}, {record.location.lng.toFixed(4)}\n                      </div>\n                    </TableCell>\n                    <TableCell>\n                      <div className={`font-medium ${getSecurityScoreColor(record.securityScore)}`}>\n                        {record.securityScore}%\n                      </div>\n                    </TableCell>\n                    <TableCell>\n                      <div className=\"text-sm\">{record.deviceInfo}</div>\n                    </TableCell>\n                    <TableCell>\n                      {getStatusBadge(record.status, record.securityScore)}\n                    </TableCell>\n                    <TableCell>\n                      <Button variant=\"outline\" size=\"sm\">\n                        Details\n                      </Button>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </div>\n        )}\n      </CardContent>\n    </Card>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1321, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/ui/alert.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border px-4 py-3 text-sm grid has-[>svg]:grid-cols-[calc(var(--spacing)*4)_1fr] grid-cols-[0_1fr] has-[>svg]:gap-x-3 gap-y-0.5 items-start [&>svg]:size-4 [&>svg]:translate-y-0.5 [&>svg]:text-current\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-card text-card-foreground\",\n        destructive:\n          \"text-destructive bg-card [&>svg]:text-current *:data-[slot=alert-description]:text-destructive/90\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nfunction Alert({\n  className,\n  variant,\n  ...props\n}: React.ComponentProps<\"div\"> & VariantProps<typeof alertVariants>) {\n  return (\n    <div\n      data-slot=\"alert\"\n      role=\"alert\"\n      className={cn(alertVariants({ variant }), className)}\n      {...props}\n    />\n  )\n}\n\nfunction AlertTitle({ className, ...props }: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"alert-title\"\n      className={cn(\n        \"col-start-2 line-clamp-1 min-h-4 font-medium tracking-tight\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nfunction AlertDescription({\n  className,\n  ...props\n}: React.ComponentProps<\"div\">) {\n  return (\n    <div\n      data-slot=\"alert-description\"\n      className={cn(\n        \"text-muted-foreground col-start-2 grid justify-items-start gap-1 text-sm [&_p]:leading-relaxed\",\n        className\n      )}\n      {...props}\n    />\n  )\n}\n\nexport { Alert, AlertTitle, AlertDescription }\n"],"names":[],"mappings":";;;;;;AACA;AAEA;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,qOACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,SAAS,MAAM,EACb,SAAS,EACT,OAAO,EACP,GAAG,OAC8D;IACjE,qBACE,6LAAC;QACC,aAAU;QACV,MAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGf;KAbS;AAeT,SAAS,WAAW,EAAE,SAAS,EAAE,GAAG,OAAoC;IACtE,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+DACA;QAED,GAAG,KAAK;;;;;;AAGf;MAXS;AAaT,SAAS,iBAAiB,EACxB,SAAS,EACT,GAAG,OACyB;IAC5B,qBACE,6LAAC;QACC,aAAU;QACV,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kGACA;QAED,GAAG,KAAK;;;;;;AAGf;MAdS","debugId":null}},
    {"offset": {"line": 1396, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/SecurityAlertsPanel.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useEffect } from 'react'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Badge } from '@/components/ui/badge'\nimport { Button } from '@/components/ui/button'\nimport { Alert, AlertDescription } from '@/components/ui/alert'\n\ninterface SecurityAlert {\n  id: string\n  type: 'mock_location' | 'gps_spoofing' | 'vpn_detected' | 'root_access' | 'network_mismatch'\n  severity: 'low' | 'medium' | 'high' | 'critical'\n  employeeId: string\n  employeeName: string\n  deviceInfo: string\n  timestamp: string\n  location: {\n    lat: number\n    lng: number\n    address: string\n  }\n  description: string\n  status: 'active' | 'resolved' | 'investigating'\n}\n\nexport function SecurityAlertsPanel() {\n  const [alerts, setAlerts] = useState<SecurityAlert[]>([])\n  const [loading, setLoading] = useState(true)\n\n  useEffect(() => {\n    const fetchAlerts = async () => {\n      setLoading(true)\n      try {\n        // Simulate API delay\n        await new Promise(resolve => setTimeout(resolve, 800))\n        \n        // Mock security alerts data\n        const mockAlerts: SecurityAlert[] = [\n          {\n            id: '1',\n            type: 'mock_location',\n            severity: 'critical',\n            employeeId: 'EMP003',\n            employeeName: 'Mike Wilson',\n            deviceInfo: 'OnePlus 11',\n            timestamp: new Date().toISOString(),\n            location: {\n              lat: 40.7128,\n              lng: -74.0060,\n              address: 'Fake GPS Location Detected'\n            },\n            description: 'Mock location provider detected. Device is using fake GPS coordinates.',\n            status: 'active'\n          },\n          {\n            id: '2',\n            type: 'vpn_detected',\n            severity: 'high',\n            employeeId: 'EMP002',\n            employeeName: 'Sarah Johnson',\n            deviceInfo: 'iPhone 14 Pro',\n            timestamp: new Date(Date.now() - 300000).toISOString(),\n            location: {\n              lat: 40.7130,\n              lng: -74.0058,\n              address: 'Office Building A, Floor 2'\n            },\n            description: 'VPN connection detected. IP geolocation does not match GPS coordinates.',\n            status: 'investigating'\n          },\n          {\n            id: '3',\n            type: 'gps_spoofing',\n            severity: 'high',\n            employeeId: 'EMP004',\n            employeeName: 'David Brown',\n            deviceInfo: 'Samsung Galaxy A54',\n            timestamp: new Date(Date.now() - 600000).toISOString(),\n            location: {\n              lat: 40.7125,\n              lng: -74.0062,\n              address: 'Suspicious Location Jump'\n            },\n            description: 'Impossible location change detected. Movement speed exceeds physical limits.',\n            status: 'resolved'\n          }\n        ]\n        \n        setAlerts(mockAlerts)\n      } catch (error) {\n        console.error('Failed to fetch security alerts:', error)\n      } finally {\n        setLoading(false)\n      }\n    }\n\n    fetchAlerts()\n    \n    // Simulate real-time updates\n    const interval = setInterval(() => {\n      // Randomly update alert statuses or add new alerts\n      setAlerts(prev => prev.map(alert => ({\n        ...alert,\n        timestamp: Math.random() > 0.9 ? new Date().toISOString() : alert.timestamp\n      })))\n    }, 10000)\n\n    return () => clearInterval(interval)\n  }, [])\n\n  const getSeverityBadge = (severity: string) => {\n    switch (severity) {\n      case 'critical':\n        return <Badge className=\"bg-red-600 text-white\">Critical</Badge>\n      case 'high':\n        return <Badge className=\"bg-orange-500 text-white\">High</Badge>\n      case 'medium':\n        return <Badge className=\"bg-yellow-500 text-white\">Medium</Badge>\n      case 'low':\n        return <Badge className=\"bg-blue-500 text-white\">Low</Badge>\n      default:\n        return <Badge variant=\"outline\">Unknown</Badge>\n    }\n  }\n\n  const getStatusBadge = (status: string) => {\n    switch (status) {\n      case 'active':\n        return <Badge className=\"bg-red-100 text-red-800 border-red-200 animate-pulse\">Active</Badge>\n      case 'investigating':\n        return <Badge className=\"bg-yellow-100 text-yellow-800 border-yellow-200\">Investigating</Badge>\n      case 'resolved':\n        return <Badge className=\"bg-green-100 text-green-800 border-green-200\">Resolved</Badge>\n      default:\n        return <Badge variant=\"outline\">Unknown</Badge>\n    }\n  }\n\n  const getAlertTypeLabel = (type: string) => {\n    switch (type) {\n      case 'mock_location':\n        return 'Mock Location Detected'\n      case 'gps_spoofing':\n        return 'GPS Spoofing'\n      case 'vpn_detected':\n        return 'VPN/Proxy Detected'\n      case 'root_access':\n        return 'Root Access Detected'\n      case 'network_mismatch':\n        return 'Network Location Mismatch'\n      default:\n        return 'Security Violation'\n    }\n  }\n\n  if (loading) {\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle>Security Alerts</CardTitle>\n          <CardDescription>Loading security monitoring data...</CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"flex items-center justify-center h-32\">\n            <div className=\"animate-spin rounded-full h-6 w-6 border-b-2 border-red-600\"></div>\n          </div>\n        </CardContent>\n      </Card>\n    )\n  }\n\n  const activeAlerts = alerts.filter(alert => alert.status === 'active')\n  const criticalAlerts = alerts.filter(alert => alert.severity === 'critical')\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Summary Cards */}\n      <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n        <Card>\n          <CardContent className=\"p-4\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium text-gray-600\">Active Alerts</p>\n                <p className=\"text-2xl font-bold text-red-600\">{activeAlerts.length}</p>\n              </div>\n              <div className=\"w-3 h-3 bg-red-500 rounded-full animate-pulse\"></div>\n            </div>\n          </CardContent>\n        </Card>\n        \n        <Card>\n          <CardContent className=\"p-4\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium text-gray-600\">Critical Issues</p>\n                <p className=\"text-2xl font-bold text-orange-600\">{criticalAlerts.length}</p>\n              </div>\n              <div className=\"w-3 h-3 bg-orange-500 rounded-full\"></div>\n            </div>\n          </CardContent>\n        </Card>\n        \n        <Card>\n          <CardContent className=\"p-4\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium text-gray-600\">Total Alerts</p>\n                <p className=\"text-2xl font-bold text-gray-900\">{alerts.length}</p>\n              </div>\n              <div className=\"w-3 h-3 bg-gray-400 rounded-full\"></div>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Alerts List */}\n      <Card>\n        <CardHeader>\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <CardTitle className=\"flex items-center gap-2\">\n                Security Alerts\n                <div className=\"w-2 h-2 bg-red-500 rounded-full animate-pulse\"></div>\n              </CardTitle>\n              <CardDescription>\n                Real-time security violation monitoring and alerts\n              </CardDescription>\n            </div>\n            <Button variant=\"outline\" size=\"sm\">\n              View All\n            </Button>\n          </div>\n        </CardHeader>\n        <CardContent>\n          {alerts.length === 0 ? (\n            <Alert>\n              <AlertDescription>\n                No security alerts at this time. All systems are operating normally.\n              </AlertDescription>\n            </Alert>\n          ) : (\n            <div className=\"space-y-4\">\n              {alerts.map((alert) => (\n                <div key={alert.id} className=\"border rounded-lg p-4 space-y-3\">\n                  <div className=\"flex items-start justify-between\">\n                    <div className=\"flex-1\">\n                      <div className=\"flex items-center gap-2 mb-2\">\n                        {getSeverityBadge(alert.severity)}\n                        {getStatusBadge(alert.status)}\n                        <span className=\"text-sm text-gray-500\">\n                          {new Date(alert.timestamp).toLocaleString()}\n                        </span>\n                      </div>\n                      <h4 className=\"font-medium text-gray-900 mb-1\">\n                        {getAlertTypeLabel(alert.type)}\n                      </h4>\n                      <p className=\"text-sm text-gray-600 mb-2\">\n                        {alert.description}\n                      </p>\n                      <div className=\"flex items-center gap-4 text-sm text-gray-500\">\n                        <span>Employee: {alert.employeeName} ({alert.employeeId})</span>\n                        <span>Device: {alert.deviceInfo}</span>\n                      </div>\n                    </div>\n                    <div className=\"flex gap-2\">\n                      <Button variant=\"outline\" size=\"sm\">\n                        Investigate\n                      </Button>\n                      <Button variant=\"outline\" size=\"sm\">\n                        Resolve\n                      </Button>\n                    </div>\n                  </div>\n                </div>\n              ))}\n            </div>\n          )}\n        </CardContent>\n      </Card>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2064, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/LocationTrackingMap.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useEffect } from 'react'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Badge } from '@/components/ui/badge'\nimport { Button } from '@/components/ui/button'\n\ninterface LocationPoint {\n  id: string\n  employeeId: string\n  employeeName: string\n  lat: number\n  lng: number\n  timestamp: string\n  status: 'valid' | 'suspicious' | 'blocked'\n  accuracy: number\n  address: string\n}\n\ninterface Geofence {\n  id: string\n  name: string\n  centerLat: number\n  centerLng: number\n  radius: number\n  active: boolean\n}\n\nexport function LocationTrackingMap() {\n  const [locations, setLocations] = useState<LocationPoint[]>([])\n  const [geofences, setGeofences] = useState<Geofence[]>([])\n  const [loading, setLoading] = useState(true)\n  const [selectedLocation, setSelectedLocation] = useState<LocationPoint | null>(null)\n\n  useEffect(() => {\n    const fetchLocationData = async () => {\n      setLoading(true)\n      try {\n        // Simulate API delay\n        await new Promise(resolve => setTimeout(resolve, 1000))\n        \n        // Mock location data\n        const mockLocations: LocationPoint[] = [\n          {\n            id: '1',\n            employeeId: 'EMP001',\n            employeeName: 'John Smith',\n            lat: 40.7128,\n            lng: -74.0060,\n            timestamp: new Date().toISOString(),\n            status: 'valid',\n            accuracy: 3.2,\n            address: 'Office Building A, Floor 3'\n          },\n          {\n            id: '2',\n            employeeId: 'EMP002',\n            employeeName: 'Sarah Johnson',\n            lat: 40.7130,\n            lng: -74.0058,\n            timestamp: new Date(Date.now() - 300000).toISOString(),\n            status: 'suspicious',\n            accuracy: 15.7,\n            address: 'Office Building A, Floor 2'\n          },\n          {\n            id: '3',\n            employeeId: 'EMP003',\n            employeeName: 'Mike Wilson',\n            lat: 40.7125,\n            lng: -74.0062,\n            timestamp: new Date(Date.now() - 600000).toISOString(),\n            status: 'blocked',\n            accuracy: 50.0,\n            address: 'Suspicious Location'\n          }\n        ]\n\n        const mockGeofences: Geofence[] = [\n          {\n            id: '1',\n            name: 'Main Office',\n            centerLat: 40.7128,\n            centerLng: -74.0060,\n            radius: 100,\n            active: true\n          },\n          {\n            id: '2',\n            name: 'Parking Area',\n            centerLat: 40.7125,\n            centerLng: -74.0065,\n            radius: 50,\n            active: true\n          }\n        ]\n        \n        setLocations(mockLocations)\n        setGeofences(mockGeofences)\n      } catch (error) {\n        console.error('Failed to fetch location data:', error)\n      } finally {\n        setLoading(false)\n      }\n    }\n\n    fetchLocationData()\n    \n    // Simulate real-time location updates\n    const interval = setInterval(() => {\n      setLocations(prev => prev.map(loc => ({\n        ...loc,\n        timestamp: Math.random() > 0.8 ? new Date().toISOString() : loc.timestamp,\n        lat: loc.lat + (Math.random() - 0.5) * 0.0001,\n        lng: loc.lng + (Math.random() - 0.5) * 0.0001\n      })))\n    }, 5000)\n\n    return () => clearInterval(interval)\n  }, [])\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'valid':\n        return 'bg-green-500'\n      case 'suspicious':\n        return 'bg-yellow-500'\n      case 'blocked':\n        return 'bg-red-500'\n      default:\n        return 'bg-gray-500'\n    }\n  }\n\n  const getStatusBadge = (status: string) => {\n    switch (status) {\n      case 'valid':\n        return <Badge className=\"bg-green-100 text-green-800 border-green-200\">Valid</Badge>\n      case 'suspicious':\n        return <Badge className=\"bg-yellow-100 text-yellow-800 border-yellow-200\">Suspicious</Badge>\n      case 'blocked':\n        return <Badge className=\"bg-red-100 text-red-800 border-red-200\">Blocked</Badge>\n      default:\n        return <Badge variant=\"outline\">Unknown</Badge>\n    }\n  }\n\n  if (loading) {\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle>Location Tracking</CardTitle>\n          <CardDescription>Loading location data...</CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"flex items-center justify-center h-96\">\n            <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\n          </div>\n        </CardContent>\n      </Card>\n    )\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Location Stats */}\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n        <Card>\n          <CardContent className=\"p-4\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium text-gray-600\">Active Locations</p>\n                <p className=\"text-2xl font-bold text-blue-600\">{locations.length}</p>\n              </div>\n              <div className=\"w-3 h-3 bg-blue-500 rounded-full animate-pulse\"></div>\n            </div>\n          </CardContent>\n        </Card>\n        \n        <Card>\n          <CardContent className=\"p-4\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium text-gray-600\">Valid Locations</p>\n                <p className=\"text-2xl font-bold text-green-600\">\n                  {locations.filter(l => l.status === 'valid').length}\n                </p>\n              </div>\n              <div className=\"w-3 h-3 bg-green-500 rounded-full\"></div>\n            </div>\n          </CardContent>\n        </Card>\n        \n        <Card>\n          <CardContent className=\"p-4\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium text-gray-600\">Suspicious</p>\n                <p className=\"text-2xl font-bold text-yellow-600\">\n                  {locations.filter(l => l.status === 'suspicious').length}\n                </p>\n              </div>\n              <div className=\"w-3 h-3 bg-yellow-500 rounded-full\"></div>\n            </div>\n          </CardContent>\n        </Card>\n        \n        <Card>\n          <CardContent className=\"p-4\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium text-gray-600\">Blocked</p>\n                <p className=\"text-2xl font-bold text-red-600\">\n                  {locations.filter(l => l.status === 'blocked').length}\n                </p>\n              </div>\n              <div className=\"w-3 h-3 bg-red-500 rounded-full\"></div>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n        {/* Map Placeholder */}\n        <Card>\n          <CardHeader>\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <CardTitle>Real-time Location Map</CardTitle>\n                <CardDescription>\n                  Live GPS tracking with geofence monitoring\n                </CardDescription>\n              </div>\n              <Badge variant=\"outline\" className=\"bg-green-50 text-green-700 border-green-200\">\n                <div className=\"w-2 h-2 bg-green-500 rounded-full mr-2 animate-pulse\"></div>\n                Live\n              </Badge>\n            </div>\n          </CardHeader>\n          <CardContent>\n            <div className=\"relative h-80 bg-gray-100 rounded-lg overflow-hidden\">\n              {/* Map placeholder with location points */}\n              <img \n                src=\"https://storage.googleapis.com/workspace-0f70711f-8b4e-4d94-86f1-2a93ccde5887/image/8cc2af4d-1a3c-4e23-9dff-fdc8c64355ed.png\" \n                alt=\"Interactive GPS map showing real-time employee locations with geofence boundaries and security status indicators\"\n                className=\"w-full h-full object-cover\"\n                onError={(e) => {\n                  e.currentTarget.style.display = 'none'\n                  e.currentTarget.nextElementSibling?.classList.remove('hidden')\n                }}\n              />\n              <div className=\"hidden absolute inset-0 flex items-center justify-center bg-gray-100\">\n                <p className=\"text-gray-500\">Map visualization would appear here</p>\n              </div>\n              \n              {/* Location points overlay */}\n              <div className=\"absolute inset-0\">\n                {locations.map((location, index) => (\n                  <div\n                    key={location.id}\n                    className={`absolute w-4 h-4 rounded-full ${getStatusColor(location.status)} cursor-pointer transform -translate-x-2 -translate-y-2 animate-pulse`}\n                    style={{\n                      left: `${20 + index * 25}%`,\n                      top: `${30 + index * 15}%`\n                    }}\n                    onClick={() => setSelectedLocation(location)}\n                    title={`${location.employeeName} - ${location.status}`}\n                  />\n                ))}\n              </div>\n              \n              {/* Geofence indicators */}\n              {geofences.map((fence, index) => (\n                <div\n                  key={fence.id}\n                  className=\"absolute border-2 border-blue-400 border-dashed rounded-full opacity-50\"\n                  style={{\n                    left: `${15 + index * 30}%`,\n                    top: `${25 + index * 20}%`,\n                    width: '80px',\n                    height: '80px'\n                  }}\n                />\n              ))}\n            </div>\n          </CardContent>\n        </Card>\n\n        {/* Location Details */}\n        <Card>\n          <CardHeader>\n            <CardTitle>Location Details</CardTitle>\n            <CardDescription>\n              Detailed information about tracked locations\n            </CardDescription>\n          </CardHeader>\n          <CardContent>\n            <div className=\"space-y-4\">\n              {locations.map((location) => (\n                <div \n                  key={location.id} \n                  className={`p-4 border rounded-lg cursor-pointer transition-colors ${\n                    selectedLocation?.id === location.id ? 'bg-blue-50 border-blue-200' : 'hover:bg-gray-50'\n                  }`}\n                  onClick={() => setSelectedLocation(location)}\n                >\n                  <div className=\"flex items-start justify-between mb-2\">\n                    <div>\n                      <h4 className=\"font-medium text-gray-900\">{location.employeeName}</h4>\n                      <p className=\"text-sm text-gray-500\">{location.employeeId}</p>\n                    </div>\n                    {getStatusBadge(location.status)}\n                  </div>\n                  \n                  <div className=\"space-y-1 text-sm text-gray-600\">\n                    <p>Address: {location.address}</p>\n                    <p>Coordinates: {location.lat.toFixed(6)}, {location.lng.toFixed(6)}</p>\n                    <p>Accuracy: ±{location.accuracy}m</p>\n                    <p>Last Update: {new Date(location.timestamp).toLocaleString()}</p>\n                  </div>\n                </div>\n              ))}\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Geofence Management */}\n      <Card>\n        <CardHeader>\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <CardTitle>Geofence Management</CardTitle>\n              <CardDescription>\n                Configure and monitor location boundaries\n              </CardDescription>\n            </div>\n            <Button variant=\"outline\" size=\"sm\">\n              Add Geofence\n            </Button>\n          </div>\n        </CardHeader>\n        <CardContent>\n          <div className=\"space-y-4\">\n            {geofences.map((fence) => (\n              <div key={fence.id} className=\"flex items-center justify-between p-4 border rounded-lg\">\n                <div>\n                  <h4 className=\"font-medium text-gray-900\">{fence.name}</h4>\n                  <p className=\"text-sm text-gray-500\">\n                    Center: {fence.centerLat.toFixed(6)}, {fence.centerLng.toFixed(6)} | Radius: {fence.radius}m\n                  </p>\n                </div>\n                <div className=\"flex items-center gap-2\">\n                  <Badge variant={fence.active ? \"default\" : \"secondary\"}>\n                    {fence.active ? \"Active\" : \"Inactive\"}\n                  </Badge>\n                  <Button variant=\"outline\" size=\"sm\">\n                    Edit\n                  </Button>\n                </div>\n              </div>\n            ))}\n          </div>\n        </CardContent>\n      </Card>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 2948, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/components/DeviceManagement.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useEffect } from 'react'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Badge } from '@/components/ui/badge'\nimport { Button } from '@/components/ui/button'\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from '@/components/ui/table'\nimport { Alert, AlertDescription } from '@/components/ui/alert'\n\ninterface Device {\n  id: string\n  employeeId: string\n  employeeName: string\n  deviceModel: string\n  osVersion: string\n  appVersion: string\n  lastSeen: string\n  status: 'online' | 'offline' | 'blocked' | 'suspicious'\n  securityScore: number\n  location: {\n    lat: number\n    lng: number\n    address: string\n  }\n  securityFlags: {\n    isRooted: boolean\n    mockLocationDetected: boolean\n    vpnActive: boolean\n    debuggingEnabled: boolean\n    unknownSources: boolean\n  }\n  trustLevel: 'high' | 'medium' | 'low' | 'blocked'\n}\n\nexport function DeviceManagement() {\n  const [devices, setDevices] = useState<Device[]>([])\n  const [loading, setLoading] = useState(true)\n  const [selectedDevice, setSelectedDevice] = useState<Device | null>(null)\n\n  useEffect(() => {\n    const fetchDevices = async () => {\n      setLoading(true)\n      try {\n        // Simulate API delay\n        await new Promise(resolve => setTimeout(resolve, 1000))\n        \n        // Mock device data\n        const mockDevices: Device[] = [\n          {\n            id: '1',\n            employeeId: 'EMP001',\n            employeeName: 'John Smith',\n            deviceModel: 'Samsung Galaxy S23',\n            osVersion: 'Android 14',\n            appVersion: '1.2.3',\n            lastSeen: new Date().toISOString(),\n            status: 'online',\n            securityScore: 95,\n            location: {\n              lat: 40.7128,\n              lng: -74.0060,\n              address: 'Office Building A, Floor 3'\n            },\n            securityFlags: {\n              isRooted: false,\n              mockLocationDetected: false,\n              vpnActive: false,\n              debuggingEnabled: false,\n              unknownSources: false\n            },\n            trustLevel: 'high'\n          },\n          {\n            id: '2',\n            employeeId: 'EMP002',\n            employeeName: 'Sarah Johnson',\n            deviceModel: 'iPhone 14 Pro',\n            osVersion: 'iOS 17.2',\n            appVersion: '1.2.3',\n            lastSeen: new Date(Date.now() - 300000).toISOString(),\n            status: 'suspicious',\n            securityScore: 65,\n            location: {\n              lat: 40.7130,\n              lng: -74.0058,\n              address: 'Office Building A, Floor 2'\n            },\n            securityFlags: {\n              isRooted: false,\n              mockLocationDetected: false,\n              vpnActive: true,\n              debuggingEnabled: false,\n              unknownSources: false\n            },\n            trustLevel: 'medium'\n          },\n          {\n            id: '3',\n            employeeId: 'EMP003',\n            employeeName: 'Mike Wilson',\n            deviceModel: 'OnePlus 11',\n            osVersion: 'Android 13',\n            appVersion: '1.2.2',\n            lastSeen: new Date(Date.now() - 600000).toISOString(),\n            status: 'blocked',\n            securityScore: 25,\n            location: {\n              lat: 40.7125,\n              lng: -74.0062,\n              address: 'Suspicious Location'\n            },\n            securityFlags: {\n              isRooted: true,\n              mockLocationDetected: true,\n              vpnActive: false,\n              debuggingEnabled: true,\n              unknownSources: true\n            },\n            trustLevel: 'blocked'\n          },\n          {\n            id: '4',\n            employeeId: 'EMP004',\n            employeeName: 'David Brown',\n            deviceModel: 'Samsung Galaxy A54',\n            osVersion: 'Android 13',\n            appVersion: '1.2.3',\n            lastSeen: new Date(Date.now() - 900000).toISOString(),\n            status: 'offline',\n            securityScore: 80,\n            location: {\n              lat: 40.7120,\n              lng: -74.0055,\n              address: 'Office Building A, Floor 1'\n            },\n            securityFlags: {\n              isRooted: false,\n              mockLocationDetected: false,\n              vpnActive: false,\n              debuggingEnabled: false,\n              unknownSources: false\n            },\n            trustLevel: 'high'\n          }\n        ]\n        \n        setDevices(mockDevices)\n      } catch (error) {\n        console.error('Failed to fetch device data:', error)\n      } finally {\n        setLoading(false)\n      }\n    }\n\n    fetchDevices()\n    \n    // Simulate real-time device status updates\n    const interval = setInterval(() => {\n      setDevices(prev => prev.map(device => ({\n        ...device,\n        lastSeen: Math.random() > 0.7 ? new Date().toISOString() : device.lastSeen,\n        status: Math.random() > 0.9 ? \n          (device.status === 'online' ? 'offline' : 'online') : \n          device.status\n      })))\n    }, 10000)\n\n    return () => clearInterval(interval)\n  }, [])\n\n  const getStatusBadge = (status: string) => {\n    switch (status) {\n      case 'online':\n        return <Badge className=\"bg-green-100 text-green-800 border-green-200\">\n          <div className=\"w-2 h-2 bg-green-500 rounded-full mr-2 animate-pulse\"></div>\n          Online\n        </Badge>\n      case 'offline':\n        return <Badge className=\"bg-gray-100 text-gray-800 border-gray-200\">Offline</Badge>\n      case 'suspicious':\n        return <Badge className=\"bg-yellow-100 text-yellow-800 border-yellow-200\">Suspicious</Badge>\n      case 'blocked':\n        return <Badge className=\"bg-red-100 text-red-800 border-red-200\">Blocked</Badge>\n      default:\n        return <Badge variant=\"outline\">Unknown</Badge>\n    }\n  }\n\n  const getTrustLevelBadge = (level: string) => {\n    switch (level) {\n      case 'high':\n        return <Badge className=\"bg-green-600 text-white\">High Trust</Badge>\n      case 'medium':\n        return <Badge className=\"bg-yellow-600 text-white\">Medium Trust</Badge>\n      case 'low':\n        return <Badge className=\"bg-orange-600 text-white\">Low Trust</Badge>\n      case 'blocked':\n        return <Badge className=\"bg-red-600 text-white\">Blocked</Badge>\n      default:\n        return <Badge variant=\"outline\">Unknown</Badge>\n    }\n  }\n\n  const getSecurityScoreColor = (score: number) => {\n    if (score >= 80) return 'text-green-600'\n    if (score >= 60) return 'text-yellow-600'\n    return 'text-red-600'\n  }\n\n  const handleDeviceAction = (deviceId: string, action: 'block' | 'unblock' | 'reset') => {\n    setDevices(prev => prev.map(device => \n      device.id === deviceId \n        ? { \n            ...device, \n            status: action === 'block' ? 'blocked' : action === 'unblock' ? 'online' : device.status,\n            trustLevel: action === 'block' ? 'blocked' : action === 'unblock' ? 'medium' : device.trustLevel\n          }\n        : device\n    ))\n  }\n\n  if (loading) {\n    return (\n      <Card>\n        <CardHeader>\n          <CardTitle>Device Management</CardTitle>\n          <CardDescription>Loading device information...</CardDescription>\n        </CardHeader>\n        <CardContent>\n          <div className=\"flex items-center justify-center h-64\">\n            <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\n          </div>\n        </CardContent>\n      </Card>\n    )\n  }\n\n  const onlineDevices = devices.filter(d => d.status === 'online').length\n  const blockedDevices = devices.filter(d => d.status === 'blocked').length\n  const suspiciousDevices = devices.filter(d => d.status === 'suspicious').length\n\n  return (\n    <div className=\"space-y-6\">\n      {/* Device Stats */}\n      <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4\">\n        <Card>\n          <CardContent className=\"p-4\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium text-gray-600\">Total Devices</p>\n                <p className=\"text-2xl font-bold text-gray-900\">{devices.length}</p>\n              </div>\n              <div className=\"w-3 h-3 bg-gray-400 rounded-full\"></div>\n            </div>\n          </CardContent>\n        </Card>\n        \n        <Card>\n          <CardContent className=\"p-4\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium text-gray-600\">Online</p>\n                <p className=\"text-2xl font-bold text-green-600\">{onlineDevices}</p>\n              </div>\n              <div className=\"w-3 h-3 bg-green-500 rounded-full animate-pulse\"></div>\n            </div>\n          </CardContent>\n        </Card>\n        \n        <Card>\n          <CardContent className=\"p-4\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium text-gray-600\">Suspicious</p>\n                <p className=\"text-2xl font-bold text-yellow-600\">{suspiciousDevices}</p>\n              </div>\n              <div className=\"w-3 h-3 bg-yellow-500 rounded-full\"></div>\n            </div>\n          </CardContent>\n        </Card>\n        \n        <Card>\n          <CardContent className=\"p-4\">\n            <div className=\"flex items-center justify-between\">\n              <div>\n                <p className=\"text-sm font-medium text-gray-600\">Blocked</p>\n                <p className=\"text-2xl font-bold text-red-600\">{blockedDevices}</p>\n              </div>\n              <div className=\"w-3 h-3 bg-red-500 rounded-full\"></div>\n            </div>\n          </CardContent>\n        </Card>\n      </div>\n\n      {/* Security Alerts */}\n      {blockedDevices > 0 && (\n        <Alert>\n          <AlertDescription>\n            {blockedDevices} device(s) are currently blocked due to security violations. \n            Review and take appropriate action.\n          </AlertDescription>\n        </Alert>\n      )}\n\n      {/* Device Table */}\n      <Card>\n        <CardHeader>\n          <div className=\"flex items-center justify-between\">\n            <div>\n              <CardTitle>Registered Devices</CardTitle>\n              <CardDescription>\n                Monitor and manage all registered devices with security status\n              </CardDescription>\n            </div>\n            <Button variant=\"outline\" size=\"sm\">\n              Add Device\n            </Button>\n          </div>\n        </CardHeader>\n        <CardContent>\n          <div className=\"overflow-x-auto\">\n            <Table>\n              <TableHeader>\n                <TableRow>\n                  <TableHead>Employee</TableHead>\n                  <TableHead>Device</TableHead>\n                  <TableHead>Status</TableHead>\n                  <TableHead>Security Score</TableHead>\n                  <TableHead>Trust Level</TableHead>\n                  <TableHead>Last Seen</TableHead>\n                  <TableHead>Security Flags</TableHead>\n                  <TableHead>Actions</TableHead>\n                </TableRow>\n              </TableHeader>\n              <TableBody>\n                {devices.map((device) => (\n                  <TableRow key={device.id}>\n                    <TableCell>\n                      <div>\n                        <div className=\"font-medium\">{device.employeeName}</div>\n                        <div className=\"text-sm text-gray-500\">{device.employeeId}</div>\n                      </div>\n                    </TableCell>\n                    <TableCell>\n                      <div>\n                        <div className=\"font-medium\">{device.deviceModel}</div>\n                        <div className=\"text-sm text-gray-500\">\n                          {device.osVersion} • App v{device.appVersion}\n                        </div>\n                      </div>\n                    </TableCell>\n                    <TableCell>\n                      {getStatusBadge(device.status)}\n                    </TableCell>\n                    <TableCell>\n                      <div className={`font-medium ${getSecurityScoreColor(device.securityScore)}`}>\n                        {device.securityScore}%\n                      </div>\n                    </TableCell>\n                    <TableCell>\n                      {getTrustLevelBadge(device.trustLevel)}\n                    </TableCell>\n                    <TableCell>\n                      <div className=\"text-sm\">\n                        {new Date(device.lastSeen).toLocaleDateString()}\n                      </div>\n                      <div className=\"text-xs text-gray-500\">\n                        {new Date(device.lastSeen).toLocaleTimeString()}\n                      </div>\n                    </TableCell>\n                    <TableCell>\n                      <div className=\"space-y-1\">\n                        {device.securityFlags.isRooted && (\n                          <Badge variant=\"destructive\" className=\"text-xs\">Root</Badge>\n                        )}\n                        {device.securityFlags.mockLocationDetected && (\n                          <Badge variant=\"destructive\" className=\"text-xs\">Mock GPS</Badge>\n                        )}\n                        {device.securityFlags.vpnActive && (\n                          <Badge variant=\"secondary\" className=\"text-xs\">VPN</Badge>\n                        )}\n                        {device.securityFlags.debuggingEnabled && (\n                          <Badge variant=\"secondary\" className=\"text-xs\">Debug</Badge>\n                        )}\n                        {!Object.values(device.securityFlags).some(flag => flag) && (\n                          <Badge variant=\"outline\" className=\"text-xs\">Clean</Badge>\n                        )}\n                      </div>\n                    </TableCell>\n                    <TableCell>\n                      <div className=\"flex gap-1\">\n                        {device.status !== 'blocked' ? (\n                          <Button \n                            variant=\"outline\" \n                            size=\"sm\"\n                            onClick={() => handleDeviceAction(device.id, 'block')}\n                          >\n                            Block\n                          </Button>\n                        ) : (\n                          <Button \n                            variant=\"outline\" \n                            size=\"sm\"\n                            onClick={() => handleDeviceAction(device.id, 'unblock')}\n                          >\n                            Unblock\n                          </Button>\n                        )}\n                        <Button \n                          variant=\"outline\" \n                          size=\"sm\"\n                          onClick={() => setSelectedDevice(device)}\n                        >\n                          Details\n                        </Button>\n                      </div>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </div>\n        </CardContent>\n      </Card>\n\n      {/* Device Details Modal */}\n      {selectedDevice && (\n        <Card>\n          <CardHeader>\n            <div className=\"flex items-center justify-between\">\n              <CardTitle>Device Details: {selectedDevice.deviceModel}</CardTitle>\n              <Button \n                variant=\"outline\" \n                size=\"sm\"\n                onClick={() => setSelectedDevice(null)}\n              >\n                Close\n              </Button>\n            </div>\n          </CardHeader>\n          <CardContent>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n              <div className=\"space-y-4\">\n                <div>\n                  <h4 className=\"font-medium text-gray-900 mb-2\">Device Information</h4>\n                  <div className=\"space-y-2 text-sm\">\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-gray-600\">Model:</span>\n                      <span>{selectedDevice.deviceModel}</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-gray-600\">OS Version:</span>\n                      <span>{selectedDevice.osVersion}</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-gray-600\">App Version:</span>\n                      <span>{selectedDevice.appVersion}</span>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-gray-600\">Security Score:</span>\n                      <span className={getSecurityScoreColor(selectedDevice.securityScore)}>\n                        {selectedDevice.securityScore}%\n                      </span>\n                    </div>\n                  </div>\n                </div>\n                \n                <div>\n                  <h4 className=\"font-medium text-gray-900 mb-2\">Security Flags</h4>\n                  <div className=\"space-y-2 text-sm\">\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-gray-600\">Rooted Device:</span>\n                      <Badge variant={selectedDevice.securityFlags.isRooted ? \"destructive\" : \"outline\"}>\n                        {selectedDevice.securityFlags.isRooted ? \"Yes\" : \"No\"}\n                      </Badge>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-gray-600\">Mock Location:</span>\n                      <Badge variant={selectedDevice.securityFlags.mockLocationDetected ? \"destructive\" : \"outline\"}>\n                        {selectedDevice.securityFlags.mockLocationDetected ? \"Detected\" : \"Clean\"}\n                      </Badge>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-gray-600\">VPN Active:</span>\n                      <Badge variant={selectedDevice.securityFlags.vpnActive ? \"secondary\" : \"outline\"}>\n                        {selectedDevice.securityFlags.vpnActive ? \"Yes\" : \"No\"}\n                      </Badge>\n                    </div>\n                    <div className=\"flex justify-between\">\n                      <span className=\"text-gray-600\">Debugging:</span>\n                      <Badge variant={selectedDevice.securityFlags.debuggingEnabled ? \"secondary\" : \"outline\"}>\n                        {selectedDevice.securityFlags.debuggingEnabled ? \"Enabled\" : \"Disabled\"}\n                      </Badge>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              \n              <div className=\"space-y-4\">\n                <div>\n                  <h4 className=\"font-medium text-gray-900 mb-2\">Location Information</h4>\n                  <div className=\"space-y-2 text-sm\">\n                    <div>\n                      <span className=\"text-gray-600\">Address:</span>\n                      <p>{selectedDevice.location.address}</p>\n                    </div>\n                    <div>\n                      <span className=\"text-gray-600\">Coordinates:</span>\n                      <p>{selectedDevice.location.lat.toFixed(6)}, {selectedDevice.location.lng.toFixed(6)}</p>\n                    </div>\n                    <div>\n                      <span className=\"text-gray-600\">Last Update:</span>\n                      <p>{new Date(selectedDevice.lastSeen).toLocaleString()}</p>\n                    </div>\n                  </div>\n                </div>\n                \n                <div>\n                  <h4 className=\"font-medium text-gray-900 mb-2\">Actions</h4>\n                  <div className=\"space-y-2\">\n                    <Button \n                      variant=\"outline\" \n                      className=\"w-full\"\n                      onClick={() => handleDeviceAction(selectedDevice.id, 'reset')}\n                    >\n                      Reset Security Score\n                    </Button>\n                    <Button \n                      variant={selectedDevice.status === 'blocked' ? \"default\" : \"destructive\"}\n                      className=\"w-full\"\n                      onClick={() => handleDeviceAction(\n                        selectedDevice.id, \n                        selectedDevice.status === 'blocked' ? 'unblock' : 'block'\n                      )}\n                    >\n                      {selectedDevice.status === 'blocked' ? 'Unblock Device' : 'Block Device'}\n                    </Button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </CardContent>\n        </Card>\n      )}\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 4394, "column": 0}, "map": {"version":3,"sources":["file:///project/sandbox/user-workspace/src/app/dashboard/page.tsx"],"sourcesContent":["'use client'\n\nimport { useState, useEffect } from 'react'\nimport { DashboardHeader } from '@/components/DashboardHeader'\nimport { DashboardSidebar } from '@/components/DashboardSidebar'\nimport { AttendanceTable } from '@/components/AttendanceTable'\nimport { SecurityAlertsPanel } from '@/components/SecurityAlertsPanel'\nimport { LocationTrackingMap } from '@/components/LocationTrackingMap'\nimport { DeviceManagement } from '@/components/DeviceManagement'\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from '@/components/ui/card'\nimport { Badge } from '@/components/ui/badge'\n\nexport default function DashboardPage() {\n  const [activeTab, setActiveTab] = useState('overview')\n  const [securityAlerts, setSecurityAlerts] = useState(0)\n  const [onlineDevices, setOnlineDevices] = useState(0)\n  const [todayAttendance, setTodayAttendance] = useState(0)\n\n  useEffect(() => {\n    // Simulate real-time data updates\n    const interval = setInterval(() => {\n      setSecurityAlerts(Math.floor(Math.random() * 5))\n      setOnlineDevices(Math.floor(Math.random() * 20) + 10)\n      setTodayAttendance(Math.floor(Math.random() * 100) + 50)\n    }, 5000)\n\n    return () => clearInterval(interval)\n  }, [])\n\n  const renderContent = () => {\n    switch (activeTab) {\n      case 'overview':\n        return (\n          <div className=\"space-y-6\">\n            {/* Stats Cards */}\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-6\">\n              <Card>\n                <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                  <CardTitle className=\"text-sm font-medium\">Security Alerts</CardTitle>\n                  <Badge variant={securityAlerts > 2 ? \"destructive\" : \"secondary\"}>\n                    {securityAlerts > 2 ? \"High\" : \"Normal\"}\n                  </Badge>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"text-2xl font-bold\">{securityAlerts}</div>\n                  <p className=\"text-xs text-muted-foreground\">Active violations</p>\n                </CardContent>\n              </Card>\n              \n              <Card>\n                <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                  <CardTitle className=\"text-sm font-medium\">Online Devices</CardTitle>\n                  <Badge variant=\"outline\">{onlineDevices}</Badge>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"text-2xl font-bold\">{onlineDevices}</div>\n                  <p className=\"text-xs text-muted-foreground\">Currently active</p>\n                </CardContent>\n              </Card>\n              \n              <Card>\n                <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                  <CardTitle className=\"text-sm font-medium\">Today's Attendance</CardTitle>\n                  <Badge variant=\"outline\">Live</Badge>\n                </CardHeader>\n                <CardContent>\n                  <div className=\"text-2xl font-bold\">{todayAttendance}</div>\n                  <p className=\"text-xs text-muted-foreground\">Verified check-ins</p>\n                </CardContent>\n              </Card>\n            </div>\n\n            {/* Security Alerts Panel */}\n            <SecurityAlertsPanel />\n            \n            {/* Location Tracking */}\n            <LocationTrackingMap />\n          </div>\n        )\n      case 'attendance':\n        return <AttendanceTable />\n      case 'security':\n        return <SecurityAlertsPanel />\n      case 'devices':\n        return <DeviceManagement />\n      case 'locations':\n        return <LocationTrackingMap />\n      default:\n        return <AttendanceTable />\n    }\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gray-50\">\n      <DashboardHeader />\n      <div className=\"flex\">\n        <DashboardSidebar activeTab={activeTab} onTabChange={setActiveTab} />\n        <main className=\"flex-1 p-6\">\n          <div className=\"max-w-7xl mx-auto\">\n            {renderContent()}\n          </div>\n        </main>\n      </div>\n    </div>\n  )\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}